#+title: pycse - Python computations in science and engineering

#+BEGIN_HTML
<a href="https://github.com/jkitchin/pycse/actions/workflows/pycse-tests.yaml"><img src="https://github.com/jkitchin/pycse/actions/workflows/pycse-tests.yaml/badge.svg"></a>
<a href="https://codecov.io/gh/jkitchin/pycse"><img src="https://codecov.io/gh/jkitchin/pycse/branch/master/graph/badge.svg"></a>
<img src="https://img.shields.io/pypi/dm/pycse.svg">
<a href="https://badge.fury.io/py/pycse"><img src="https://badge.fury.io/py/pycse.svg"></a>


<a href="https://github.com/jkitchin/pycse/actions/workflows/deploy.yml"><img src="https://github.com/jkitchin/pycse/actions/workflows/deploy.yml/badge.svg"></a>
#+END_HTML

If you want to cite this project, use this doi:10.5281/zenodo.19111.

#+BEGIN_HTML
<a href="http://dx.doi.org/10.5281/zenodo.19111"><img src="https://zenodo.org/badge/doi/10.5281/zenodo.19111.svg" alt="10.5281/zenodo.19111"></a>
#+END_HTML

#+BEGIN_SRC bibtex
@misc{john_kitchin_2015_19111,
  author       = {John R. Kitchin},
  title        = {pycse: First release},
  month        = jun,
  year         = 2015,
  doi          = {10.5281/zenodo.19111},
  url          = {http://dx.doi.org/10.5281/zenodo.19111}
}
#+END_SRC

This git repository hosts my notes on using python in scientific and engineering calculations. The aim is to collect examples that span the types of computation/calculations scientists and engineers typically do to demonstrate the utility of python as a computational platform in engineering education.

* Installation

You may want to install the python library with pycse:

#+BEGIN_SRC sh
pip install pycse
#+END_SRC

Feeling brave? You can install the cutting edge from GitHUB:

#+BEGIN_SRC sh
pip install git+git://github.com/jkitchin/pycse
#+END_SRC

* Docker

You can use a Docker image to run everything here. You have to have Docker installed and working on your system.

See [[./docker/]] for the setup used.

** Option 1

I provide a `pycse` command-line utility that is installed with the package. Simply run `pycse` in a shell in the directory you want to start Jupyter lab in. When done, type C-c <return> in the shell to quit, and it should be good.

** Option 2

You can manually pull the image:

#+BEGIN_SRC sh
docker pull jkitchin/pycse:latest
#+END_SRC

Then, run the [[./docker/pycse.sh]] script. This script mounts the current working directory, and takes care of choosing a random port.

* Documentation

See https://kitchingroup.cheme.cmu.edu/pycse/docs/pycse.html for the Python documentation.
